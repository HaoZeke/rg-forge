context:
  version: "3.00.dev1"
  build_pre: 1
  build_num: 0
  git_rev: 3a1b78f7a336045dd2c2b6d35b8fd5487ccef4a4

package:
  name: eon
  version: ${{ version }}

source:
  git: https://github.com/TheochemUI/eOn.git
  rev: ${{ git_rev }}

build:
  number: ${{ build_num }}
  string: h${{ hash }}_${{ build_num }}_gc_${{ git_rev[:7] }}${{ "_lmp" if (lammps_enabled and (not aarch64)) else ""}}${{ "_mts" if metatomic_enabled else ""}}
  dynamic_linking:
    binary_relocation:
      - if: osx
        then: false
  skip:
    - win
  script:
    file: build.nu
    env:
      WITH_LAMMPS: ${{ 1 if (lammps_enabled and (not aarch64)) else 0 }}
      WITH_METATOMIC: ${{ 1 if metatomic_enabled else 0 }}

requirements:
  build:
    - ninja
    - meson
    - sccache
    - cmake
    - nushell
    - git
    - if: (build_platform != target_platform)
      then:
        - python
        - cross-python_${{target_platform}}
    - if: osx
      then: llvm-openmp
  host:
    - python
    - pip
    - numpy
    - pyyaml
    - setuptools
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ compiler('fortran') }}
    - if: osx # xref: https://github.com/scipy/scipy/issues/23361
      then: gfortran_impl_osx-64 >14
    - ${{ stdlib('c') }}
    # LAMMPS is not built for linux arm64, should be built for osx-arm64 but fails to find lammps
    - if: lammps_enabled and (not aarch64)
      then:
        - lammps * ${{ lammps_version }}*
    - if: metatomic_enabled
      then:
        # always build against the CPU version of libtorch, we can still pick
        # the cuda one at runtime [1]
        - libtorch >=2.7,<2.8 cpu*
        - libmetatomic-torch >=0.1.2,<0.2
        - libmetatensor-torch
        - vesin
    - eigen >=3.4,<3.5
    - libblas
    - libcblas
    - liblapack
    - liblapacke
    - fmt
    - spdlog
    - if: osx
      then: llvm-openmp
  run:
    - if: lammps_enabled and (not aarch64)
      then:
        - lammps * ${{ lammps_version }}*
    - python
    - pyyaml
    - numpy
    - eigen
    - fmt
    - spdlog
    - if: metatomic_enabled
      then:
        - libtorch >=2.7,<2.8 cpu*
        - libmetatomic-torch >=0.1.2,<0.2
        - libmetatensor-torch
        - vesin
    - if: osx
      then: llvm-openmp

tests:
  - python:
      imports:
        - eon.server
  - script:
      - eonclient -h
      - conda inspect linkages -p $PREFIX $PKG_NAME
      - if: osx
        then:
          - conda inspect objects -p $PREFIX $PKG_NAME
    requirements:
      run:
        - conda-build

about:
  homepage: https://theochemui.github.io/eOn/
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: "Algorithms for long time scales and potential energy surface exploration"
  description: |
    The EON software package contains a set of algorithms used primarily to
    model the evolution of atomic scale systems over long time scales. This
    version is instrumented for working with Metatensor.
  documentation: https://theochemui.github.io/eOn/user_guide/index.html
  repository: https://github.com/TheochemUI/eOn

extra:
  recipe-maintainers:
    - HaoZeke
